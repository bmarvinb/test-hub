// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Test {
  id          String         @id @default(uuid())
  title       String
  description String
  questions   TestQuestion[]
}

model TestQuestion {
  id            String       @id @default(uuid())
  testId        String
  questionType  QuestionType
  test          Test         @relation(fields: [testId], references: [id])
  choiceBasedId String?
  textBasedId   String?
  numberBasedId String?
  ChoiceBased   ChoiceBased? @relation(fields: [choiceBasedId], references: [id])
  TextBased     TextBased?   @relation(fields: [textBasedId], references: [id])
  NumberBased   NumberBased? @relation(fields: [numberBasedId], references: [id])
}

model ChoiceBased {
  id                   String                 @id @default(uuid())
  question             String
  singleChoice         Boolean
  choiceOptions        ChoiceOption[]
  ChoiceToChoiceOption ChoiceToChoiceOption[]
  TestQuestion         TestQuestion[]
}

model ChoiceToChoiceOption {
  id       String       @id @default(uuid())
  choiceId String
  optionId String
  choice   ChoiceBased  @relation(fields: [choiceId], references: [id])
  option   ChoiceOption @relation(fields: [optionId], references: [id])
}

model ChoiceOption {
  id            String                 @id @default(uuid())
  value         String
  isAnswer      Boolean
  choices       ChoiceToChoiceOption[]
  ChoiceBased   ChoiceBased?           @relation(fields: [choiceBasedId], references: [id])
  choiceBasedId String?
}

model TextBased {
  id           String         @id @default(uuid())
  question     String
  answer       String
  TestQuestion TestQuestion[]
}

model NumberBased {
  id           String         @id @default(uuid())
  question     String
  answer       Float
  tolerance    Float
  TestQuestion TestQuestion[]
}

enum QuestionType {
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  NUMBER
  TEXT
}
